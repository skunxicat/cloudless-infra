#!/bin/bash

# Bootstrap cloudless-infra into existing project
# Usage: curl -sL https://raw.githubusercontent.com/skunxicat/cloudless-infra/main/bootstrap | bash

set -e

PROJECT_NAME=${1:-$(basename "$PWD")}
BACKUP_FILES=("README.md" ".gitignore" ".env.example")
REMOVE_FILES=("bootstrap" "README.md" ".env.example")

echo "Bootstrapping cloudless-infra for project: $PROJECT_NAME"

# Backup common files


for f in "${BACKUP_FILES[@]}"; do
  [ -f "$f" ] && cp "$f" "$f.bak"
done

# Download and extract without git history
if [ -n "$GITHUB_TOKEN" ]; then
  # Private repo with token
  curl -sL -H "Authorization: token $GITHUB_TOKEN" \
    https://github.com/skunxicat/cloudless-infra/archive/refs/heads/main.tar.gz | \
    tar --strip-components=1 -xzf -
else
  # Public repo
  curl -sL https://github.com/skunxicat/cloudless-infra/archive/refs/heads/main.tar.gz | \
    tar --strip-components=1 -xzf -
fi

# Setup environment (append to .env)
{
  echo -e "\n# cloudless-infra"
  cat .env.example
} >> .env

# if .gitignore.bak exists, append to it
if [ -f .gitignore ]; then
  {
    echo -e "\n# cloudless-infra"
    cat .gitignore
  } >> .gitignore.bak
fi

# Remove REMOVE_FILES
for f in "${REMOVE_FILES[@]}"; do
  rm -rf "$f"
done

# Restore common files
for f in "${BACKUP_FILES[@]}"; do
  [ -f "$f.bak" ] && mv "$f.bak" "$f"
done

# Add . to the $PATH
export PATH="$(pwd):$PATH"
echo "export PATH=\"$(pwd):$PATH\"" >> ~/.zshrc

echo "✓ Cloudless infra bootstrapped in current directory"
echo "✓ Edit .env with your settings"
echo "✓ Run: ./tf init"